//
// File generated by rootcint at Fri Aug 15 03:26:37 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TFragmentFromNTupleDictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TFragmentFromNTupleDictionary.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Detector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Detector(void *p = 0);
   static void *newArray_Detector(Long_t size, void *p);
   static void delete_Detector(void *p);
   static void deleteArray_Detector(void *p);
   static void destruct_Detector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Detector*)
   {
      ::Detector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Detector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Detector", ::Detector::Class_Version(), "./Griffin.hh", 6,
                  typeid(::Detector), DefineBehavior(ptr, ptr),
                  &::Detector::Dictionary, isa_proxy, 4,
                  sizeof(::Detector) );
      instance.SetNew(&new_Detector);
      instance.SetNewArray(&newArray_Detector);
      instance.SetDelete(&delete_Detector);
      instance.SetDeleteArray(&deleteArray_Detector);
      instance.SetDestructor(&destruct_Detector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Detector*)
   {
      return GenerateInitInstanceLocal((::Detector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Detector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TFragment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TFragment(void *p = 0);
   static void *newArray_TFragment(Long_t size, void *p);
   static void delete_TFragment(void *p);
   static void deleteArray_TFragment(void *p);
   static void destruct_TFragment(void *p);
   static void streamer_TFragment(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFragment*)
   {
      ::TFragment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TFragment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TFragment", ::TFragment::Class_Version(), "./TFragment.hh", 18,
                  typeid(::TFragment), DefineBehavior(ptr, ptr),
                  &::TFragment::Dictionary, isa_proxy, 0,
                  sizeof(::TFragment) );
      instance.SetNew(&new_TFragment);
      instance.SetNewArray(&newArray_TFragment);
      instance.SetDelete(&delete_TFragment);
      instance.SetDeleteArray(&deleteArray_TFragment);
      instance.SetDestructor(&destruct_TFragment);
      instance.SetStreamerFunc(&streamer_TFragment);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFragment*)
   {
      return GenerateInitInstanceLocal((::TFragment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFragment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *Detector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Detector::Class_Name()
{
   return "Detector";
}

//______________________________________________________________________________
const char *Detector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Detector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Detector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Detector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Detector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Detector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Detector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Detector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFragment::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFragment::Class_Name()
{
   return "TFragment";
}

//______________________________________________________________________________
const char *TFragment::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFragment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFragment::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TFragment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFragment::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFragment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFragment::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TFragment*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Detector::Streamer(TBuffer &R__b)
{
   // Stream an object of class Detector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Detector::Class(),this);
   } else {
      R__b.WriteClassBuffer(Detector::Class(),this);
   }
}

//______________________________________________________________________________
void Detector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Detector.
      TClass *R__cl = ::Detector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetectorId", &fDetectorId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCrystalId", &fCrystalId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimulationEnergy", &fSimulationEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosition", &fPosition);
      R__insp.InspectMember(fPosition, "fPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Detector(void *p) {
      return  p ? new(p) ::Detector : new ::Detector;
   }
   static void *newArray_Detector(Long_t nElements, void *p) {
      return p ? new(p) ::Detector[nElements] : new ::Detector[nElements];
   }
   // Wrapper around operator delete
   static void delete_Detector(void *p) {
      delete ((::Detector*)p);
   }
   static void deleteArray_Detector(void *p) {
      delete [] ((::Detector*)p);
   }
   static void destruct_Detector(void *p) {
      typedef ::Detector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Detector

//______________________________________________________________________________
void TFragment::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFragment.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> MidasTimeStamp;
      R__b >> MidasId;
      R__b >> TriggerId;
      R__b >> FragmentId;
      R__b >> TriggerBitPattern;
      R__b >> ChannelNumber;
      R__b >> ChannelAddress;
      {
         vector<int32_t> &R__stl =  Cfd;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int32_t> &R__stl =  Led;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int32_t> &R__stl =  Charge;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b >> TimeStampLow;
      R__b >> TimeStampHigh;
      R__b >> TimeToTrig;
      R__b >> PPG;
      R__b >> DeadTime;
      R__b >> NumberOfFilters;
      R__b >> NumberOfPileups;
      R__b >> DataType;
      R__b >> DetectorType;
      R__b >> ChannelId;
      {
         vector<uint16_t> &R__stl =  KValue;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int16_t> &R__stl =  wavebuffer;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, TFragment::IsA());
   } else {
      R__c = R__b.WriteVersion(TFragment::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << MidasTimeStamp;
      R__b << MidasId;
      R__b << TriggerId;
      R__b << FragmentId;
      R__b << TriggerBitPattern;
      R__b << ChannelNumber;
      R__b << ChannelAddress;
      {
         vector<int32_t> &R__stl =  Cfd;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int32_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int32_t> &R__stl =  Led;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int32_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int32_t> &R__stl =  Charge;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int32_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << TimeStampLow;
      R__b << TimeStampHigh;
      R__b << TimeToTrig;
      R__b << PPG;
      R__b << DeadTime;
      R__b << NumberOfFilters;
      R__b << NumberOfPileups;
      R__b << DataType;
      R__b << DetectorType;
      R__b << ChannelId;
      {
         vector<uint16_t> &R__stl =  KValue;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<uint16_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int16_t> &R__stl =  wavebuffer;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int16_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TFragment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TFragment.
      TClass *R__cl = ::TFragment::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MidasTimeStamp", &MidasTimeStamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MidasId", &MidasId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerId", &TriggerId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FragmentId", &FragmentId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerBitPattern", &TriggerBitPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChannelNumber", &ChannelNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChannelAddress", &ChannelAddress);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cfd", (void*)&Cfd);
      R__insp.InspectMember("vector<int32_t>", (void*)&Cfd, "Cfd.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Led", (void*)&Led);
      R__insp.InspectMember("vector<int32_t>", (void*)&Led, "Led.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", (void*)&Charge);
      R__insp.InspectMember("vector<int32_t>", (void*)&Charge, "Charge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeStampLow", &TimeStampLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeStampHigh", &TimeStampHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeToTrig", &TimeToTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PPG", &PPG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DeadTime", &DeadTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumberOfFilters", &NumberOfFilters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumberOfPileups", &NumberOfPileups);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DataType", &DataType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DetectorType", &DetectorType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChannelId", &ChannelId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KValue", (void*)&KValue);
      R__insp.InspectMember("vector<uint16_t>", (void*)&KValue, "KValue.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wavebuffer", (void*)&wavebuffer);
      R__insp.InspectMember("vector<int16_t>", (void*)&wavebuffer, "wavebuffer.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFragment(void *p) {
      return  p ? new(p) ::TFragment : new ::TFragment;
   }
   static void *newArray_TFragment(Long_t nElements, void *p) {
      return p ? new(p) ::TFragment[nElements] : new ::TFragment[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFragment(void *p) {
      delete ((::TFragment*)p);
   }
   static void deleteArray_TFragment(void *p) {
      delete [] ((::TFragment*)p);
   }
   static void destruct_TFragment(void *p) {
      typedef ::TFragment current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TFragment(TBuffer &buf, void *obj) {
      ((::TFragment*)obj)->::TFragment::Streamer(buf);
   }
} // end of namespace ROOT for class ::TFragment

namespace ROOT {
   void vectorlEDetectorgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDetectorgR_Dictionary();
   static void *new_vectorlEDetectorgR(void *p = 0);
   static void *newArray_vectorlEDetectorgR(Long_t size, void *p);
   static void delete_vectorlEDetectorgR(void *p);
   static void deleteArray_vectorlEDetectorgR(void *p);
   static void destruct_vectorlEDetectorgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<Detector>*)
   {
      vector<Detector> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Detector>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Detector>", -2, "prec_stl/vector", 49,
                  typeid(vector<Detector>), DefineBehavior(ptr, ptr),
                  0, &vectorlEDetectorgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<Detector>) );
      instance.SetNew(&new_vectorlEDetectorgR);
      instance.SetNewArray(&newArray_vectorlEDetectorgR);
      instance.SetDelete(&delete_vectorlEDetectorgR);
      instance.SetDeleteArray(&deleteArray_vectorlEDetectorgR);
      instance.SetDestructor(&destruct_vectorlEDetectorgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<Detector> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Detector>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDetectorgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<Detector>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEDetectorgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Detector> : new vector<Detector>;
   }
   static void *newArray_vectorlEDetectorgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Detector>[nElements] : new vector<Detector>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDetectorgR(void *p) {
      delete ((vector<Detector>*)p);
   }
   static void deleteArray_vectorlEDetectorgR(void *p) {
      delete [] ((vector<Detector>*)p);
   }
   static void destruct_vectorlEDetectorgR(void *p) {
      typedef vector<Detector> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<Detector>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortgR_Dictionary();
   static void *new_vectorlEshortgR(void *p = 0);
   static void *newArray_vectorlEshortgR(Long_t size, void *p);
   static void delete_vectorlEshortgR(void *p);
   static void deleteArray_vectorlEshortgR(void *p);
   static void destruct_vectorlEshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<short>*)
   {
      vector<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short>", -2, "vector.dll", 0,
                  typeid(vector<short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<short>) );
      instance.SetNew(&new_vectorlEshortgR);
      instance.SetNewArray(&newArray_vectorlEshortgR);
      instance.SetDelete(&delete_vectorlEshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortgR);
      instance.SetDestructor(&destruct_vectorlEshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short> : new vector<short>;
   }
   static void *newArray_vectorlEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short>[nElements] : new vector<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortgR(void *p) {
      delete ((vector<short>*)p);
   }
   static void deleteArray_vectorlEshortgR(void *p) {
      delete [] ((vector<short>*)p);
   }
   static void destruct_vectorlEshortgR(void *p) {
      typedef vector<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<short>

namespace ROOT {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned short>

/********************************************************
* TFragmentFromNTupleDictionary.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTFragmentFromNTupleDictionary();

extern "C" void G__set_cpp_environmentTFragmentFromNTupleDictionary() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Griffin.hh");
  G__add_compiledheader("TFragment.hh");
  G__cpp_reset_tagtableTFragmentFromNTupleDictionary();
}
#include <new>
extern "C" int G__cpp_dllrevTFragmentFromNTupleDictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Detector */
static int G__TFragmentFromNTupleDictionary_220_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Detector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Detector[n];
     } else {
       p = new((void*) gvp) Detector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Detector;
     } else {
       p = new((void*) gvp) Detector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Detector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Detector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, (double) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) Detector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, (double) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Detector*) G__getstructoffset())->AddEnergy((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Detector*) G__getstructoffset())->Set(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), *((TVector3*) G__int(libp->para[5]))
, (double) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Detector*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Detector*) G__getstructoffset())->EventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Detector*) G__getstructoffset())->DetectorId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Detector*) G__getstructoffset())->CrystalId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Detector*) G__getstructoffset())->SimulationEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Detector*) G__getstructoffset())->Energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((Detector*) G__getstructoffset())->Position();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Detector*) G__getstructoffset())->Time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Detector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Detector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Detector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Detector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Detector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Detector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Detector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Detector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_220_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Detector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TFragmentFromNTupleDictionary_220_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Detector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Detector(*(Detector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Detector G__TDetector;
static int G__TFragmentFromNTupleDictionary_220_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Detector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Detector*) (soff+(sizeof(Detector)*i)))->~G__TDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Detector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Detector*) (soff))->~G__TDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TFragmentFromNTupleDictionary_220_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Detector* dest = (Detector*) G__getstructoffset();
   *dest = *(Detector*) libp->para[0].ref;
   const Detector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFragment */
static int G__TFragmentFromNTupleDictionary_237_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFragment* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFragment[n];
     } else {
       p = new((void*) gvp) TFragment[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFragment;
     } else {
       p = new((void*) gvp) TFragment;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_237_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TFragment*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TFragment*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_237_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TFragment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_237_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFragment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_237_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TFragment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_237_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TFragment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_237_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TFragment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_237_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFragment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_237_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFragment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_237_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TFragment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_237_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TFragment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TFragmentFromNTupleDictionary_237_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TFragment* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TFragment(*(TFragment*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFragment G__TTFragment;
static int G__TFragmentFromNTupleDictionary_237_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFragment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFragment*) (soff+(sizeof(TFragment)*i)))->~G__TTFragment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFragment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFragment*) (soff))->~G__TTFragment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TFragmentFromNTupleDictionary_237_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFragment* dest = (TFragment*) G__getstructoffset();
   *dest = *(TFragment*) libp->para[0].ref;
   const TFragment& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<Detector,allocator<Detector> > */
static int G__TFragmentFromNTupleDictionary_243_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Detector,allocator<Detector> >::reference obj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->at((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::const_reference obj = ((const vector<Detector,allocator<Detector> >*) G__getstructoffset())->at((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::iterator* pobj;
         vector<Detector,allocator<Detector> >::iterator xobj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->begin();
         pobj = new vector<Detector,allocator<Detector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::iterator* pobj;
         vector<Detector,allocator<Detector> >::iterator xobj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->end();
         pobj = new vector<Detector,allocator<Detector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::reverse_iterator* pobj;
         vector<Detector,allocator<Detector> >::reverse_iterator xobj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->rbegin();
         pobj = new vector<Detector,allocator<Detector> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::reverse_iterator* pobj;
         vector<Detector,allocator<Detector> >::reverse_iterator xobj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->rend();
         pobj = new vector<Detector,allocator<Detector> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Detector,allocator<Detector> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Detector,allocator<Detector> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->resize((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->resize((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]), *((Detector*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Detector,allocator<Detector> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<Detector,allocator<Detector> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Detector,allocator<Detector> >::reference obj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->operator[]((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::const_reference obj = ((const vector<Detector,allocator<Detector> >*) G__getstructoffset())->operator[]((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Detector,allocator<Detector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Detector,allocator<Detector> >[n];
     } else {
       p = new((void*) gvp) vector<Detector,allocator<Detector> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Detector,allocator<Detector> >;
     } else {
       p = new((void*) gvp) vector<Detector,allocator<Detector> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Detector,allocator<Detector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Detector,allocator<Detector> >((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]), *(Detector*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<Detector,allocator<Detector> >((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]), *(Detector*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Detector,allocator<Detector> >((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<Detector,allocator<Detector> >((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Detector,allocator<Detector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Detector,allocator<Detector> >(*(vector<Detector,allocator<Detector> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<Detector,allocator<Detector> >(*(vector<Detector,allocator<Detector> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Detector,allocator<Detector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Detector,allocator<Detector> >(*((vector<Detector,allocator<Detector> >::const_iterator*) G__int(libp->para[0])), *((vector<Detector,allocator<Detector> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<Detector,allocator<Detector> >(*((vector<Detector,allocator<Detector> >::const_iterator*) G__int(libp->para[0])), *((vector<Detector,allocator<Detector> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Detector,allocator<Detector> >& obj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->operator=(*(vector<Detector,allocator<Detector> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->reserve((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Detector& obj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Detector& obj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->push_back(*(Detector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->swap(*(vector<Detector,allocator<Detector> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::iterator* pobj;
         vector<Detector,allocator<Detector> >::iterator xobj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->insert(*((vector<Detector,allocator<Detector> >::iterator*) G__int(libp->para[0])), *(Detector*) libp->para[1].ref);
         pobj = new vector<Detector,allocator<Detector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->insert(*((vector<Detector,allocator<Detector> >::iterator*) G__int(libp->para[0])), *((vector<Detector,allocator<Detector> >::const_iterator*) G__int(libp->para[1]))
, *((vector<Detector,allocator<Detector> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->insert(*((vector<Detector,allocator<Detector> >::iterator*) G__int(libp->para[0])), (vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[1])
, *(Detector*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->erase(*((vector<Detector,allocator<Detector> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->erase(*((vector<Detector,allocator<Detector> >::iterator*) G__int(libp->para[0])), *((vector<Detector,allocator<Detector> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TFragmentFromNTupleDictionary_243_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<Detector,allocator<Detector> > G__TvectorlEDetectorcOallocatorlEDetectorgRsPgR;
static int G__TFragmentFromNTupleDictionary_243_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<Detector,allocator<Detector> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<Detector,allocator<Detector> >*) (soff+(sizeof(vector<Detector,allocator<Detector> >)*i)))->~G__TvectorlEDetectorcOallocatorlEDetectorgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<Detector,allocator<Detector> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<Detector,allocator<Detector> >*) (soff))->~G__TvectorlEDetectorcOallocatorlEDetectorgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Detector */

/* TFragment */

/* vector<Detector,allocator<Detector> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTFragmentFromNTupleDictionary {
 public:
  G__Sizep2memfuncTFragmentFromNTupleDictionary(): p(&G__Sizep2memfuncTFragmentFromNTupleDictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTFragmentFromNTupleDictionary::*p)();
};

size_t G__get_sizep2memfuncTFragmentFromNTupleDictionary()
{
  G__Sizep2memfuncTFragmentFromNTupleDictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTFragmentFromNTupleDictionary() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector))) {
     Detector *G__Lderived;
     G__Lderived=(Detector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector),G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TFragment))) {
     TFragment *G__Lderived;
     G__Lderived=(TFragment*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TFragment),G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTFragmentFromNTupleDictionary() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int32_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<uint16_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int16_t>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEshortcOallocatorlEshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Detector>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector),0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector),0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector),256,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector),1,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector),257,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Detector */
static void G__setup_memvarDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector));
   { Detector *p; p=(Detector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fDetectorId=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fCrystalId=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSimulationEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TVector3),-1,-1,4,"fPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFragment */
static void G__setup_memvarTFragment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TFragment));
   { TFragment *p; p=(TFragment*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->MidasTimeStamp)-(long)(p)),108,0,0,-1,G__defined_typename("time_t"),-1,1,"MidasTimeStamp=",0,"->");
   G__memvar_setup((void*)((long)(&p->MidasId)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"MidasId=",0,"->");
   G__memvar_setup((void*)((long)(&p->TriggerId)-(long)(p)),107,0,0,-1,G__defined_typename("uint64_t"),-1,1,"TriggerId=",0,"->          MasterFilterID in Griffin   ");
   G__memvar_setup((void*)((long)(&p->FragmentId)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"FragmentId=",0,"->");
   G__memvar_setup((void*)((long)(&p->TriggerBitPattern)-(long)(p)),105,0,0,-1,G__defined_typename("int32_t"),-1,1,"TriggerBitPattern=",0,"->          MasterFilterPattern in Griffin");
   G__memvar_setup((void*)((long)(&p->ChannelNumber)-(long)(p)),105,0,0,-1,G__defined_typename("int32_t"),-1,1,"ChannelNumber=",0,"->");
   G__memvar_setup((void*)((long)(&p->ChannelAddress)-(long)(p)),105,0,0,-1,G__defined_typename("int32_t"),-1,1,"ChannelAddress=",0,"->");
   G__memvar_setup((void*)((long)(&p->Cfd)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int32_t>"),-1,1,"Cfd=",0,"->");
   G__memvar_setup((void*)((long)(&p->Led)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int32_t>"),-1,1,"Led=",0,"->");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int32_t>"),-1,1,"Charge=",0,"->");
   G__memvar_setup((void*)((long)(&p->TimeStampLow)-(long)(p)),105,0,0,-1,G__defined_typename("int32_t"),-1,1,"TimeStampLow=",0,"->");
   G__memvar_setup((void*)((long)(&p->TimeStampHigh)-(long)(p)),105,0,0,-1,G__defined_typename("int32_t"),-1,1,"TimeStampHigh=",0,"->");
   G__memvar_setup((void*)((long)(&p->TimeToTrig)-(long)(p)),105,0,0,-1,G__defined_typename("int32_t"),-1,1,"TimeToTrig=",0,"->");
   G__memvar_setup((void*)((long)(&p->PPG)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"PPG=",0,"->");
   G__memvar_setup((void*)((long)(&p->DeadTime)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"DeadTime=",0,"->");
   G__memvar_setup((void*)((long)(&p->NumberOfFilters)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"NumberOfFilters=",0,"->");
   G__memvar_setup((void*)((long)(&p->NumberOfPileups)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"NumberOfPileups=",0,"->");
   G__memvar_setup((void*)((long)(&p->DataType)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"DataType=",0,"->");
   G__memvar_setup((void*)((long)(&p->DetectorType)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"DetectorType=",0,"->");
   G__memvar_setup((void*)((long)(&p->ChannelId)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"ChannelId=",0,"->");
   G__memvar_setup((void*)((long)(&p->KValue)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<uint16_t>"),-1,1,"KValue=",0,"->");
   G__memvar_setup((void*)((long)(&p->wavebuffer)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<int16_t>"),-1,1,"wavebuffer=",0,"->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<Detector,allocator<Detector> > */
static void G__setup_memvarvectorlEDetectorcOallocatorlEDetectorgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   { vector<Detector,allocator<Detector> > *p; p=(vector<Detector,allocator<Detector> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTFragmentFromNTupleDictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDetector(void) {
   /* Detector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector));
   G__memfunc_setup("Detector",826,G__TFragmentFromNTupleDictionary_220_0_1, 105, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Detector",826,G__TFragmentFromNTupleDictionary_220_0_2, 105, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector), -1, 0, 7, 1, 1, 0, 
"i - - 0 - evNumber i - - 0 - detNumber "
"i - - 0 - cryNumber d - - 0 - simEnergy "
"d - - 0 - energy u 'TVector3' - 0 - pos "
"d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddEnergy",883,G__TFragmentFromNTupleDictionary_220_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - simEnergy d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__TFragmentFromNTupleDictionary_220_0_4, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - - 0 - evNumber i - - 0 - detNumber "
"i - - 0 - cryNumber d - - 0 - simEnergy "
"d - - 0 - energy u 'TVector3' - 0 - pos "
"d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__TFragmentFromNTupleDictionary_220_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventNumber",1131,G__TFragmentFromNTupleDictionary_220_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetectorId",999,G__TFragmentFromNTupleDictionary_220_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CrystalId",911,G__TFragmentFromNTupleDictionary_220_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimulationEnergy",1679,G__TFragmentFromNTupleDictionary_220_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__TFragmentFromNTupleDictionary_220_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Position",853,G__TFragmentFromNTupleDictionary_220_0_11, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Time",399,G__TFragmentFromNTupleDictionary_220_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TFragmentFromNTupleDictionary_220_0_13, 85, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Detector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TFragmentFromNTupleDictionary_220_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Detector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TFragmentFromNTupleDictionary_220_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Detector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TFragmentFromNTupleDictionary_220_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Detector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TFragmentFromNTupleDictionary_220_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TFragmentFromNTupleDictionary_220_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Detector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TFragmentFromNTupleDictionary_220_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Detector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TFragmentFromNTupleDictionary_220_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Detector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TFragmentFromNTupleDictionary_220_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Detector::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Detector", 826, G__TFragmentFromNTupleDictionary_220_0_25, (int) ('i'), G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector), -1, 0, 1, 1, 1, 0, "u 'Detector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Detector", 952, G__TFragmentFromNTupleDictionary_220_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TFragmentFromNTupleDictionary_220_0_27, (int) ('u'), G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector), -1, 1, 1, 1, 1, 0, "u 'Detector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFragment(void) {
   /* TFragment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TFragment));
   G__memfunc_setup("TFragment",904,G__TFragmentFromNTupleDictionary_237_0_1, 105, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TFragment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", "!", (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__TFragmentFromNTupleDictionary_237_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", "!", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__TFragmentFromNTupleDictionary_237_0_4, 85, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TFragment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TFragmentFromNTupleDictionary_237_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFragment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TFragmentFromNTupleDictionary_237_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TFragment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TFragmentFromNTupleDictionary_237_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TFragment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TFragmentFromNTupleDictionary_237_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TFragmentFromNTupleDictionary_237_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFragment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TFragmentFromNTupleDictionary_237_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFragment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TFragmentFromNTupleDictionary_237_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TFragment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TFragmentFromNTupleDictionary_237_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TFragment::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TFragment", 904, G__TFragmentFromNTupleDictionary_237_0_16, (int) ('i'), G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TFragment), -1, 0, 1, 1, 1, 0, "u 'TFragment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFragment", 1030, G__TFragmentFromNTupleDictionary_237_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TFragmentFromNTupleDictionary_237_0_18, (int) ('u'), G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_TFragment), -1, 1, 1, 1, 1, 0, "u 'TFragment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEDetectorcOallocatorlEDetectorgRsPgR(void) {
   /* vector<Detector,allocator<Detector> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__memfunc_setup("at",213,G__TFragmentFromNTupleDictionary_243_0_1, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector), G__defined_typename("vector<Detector,allocator<Detector> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TFragmentFromNTupleDictionary_243_0_2, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector), G__defined_typename("vector<Detector,allocator<Detector> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TFragmentFromNTupleDictionary_243_0_3, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TFragmentFromNTupleDictionary_243_0_4, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TFragmentFromNTupleDictionary_243_0_5, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR), G__defined_typename("vector<Detector,allocator<Detector> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TFragmentFromNTupleDictionary_243_0_6, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR), G__defined_typename("vector<Detector,allocator<Detector> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TFragmentFromNTupleDictionary_243_0_7, 107, -1, G__defined_typename("vector<Detector,allocator<Detector> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TFragmentFromNTupleDictionary_243_0_8, 107, -1, G__defined_typename("vector<Detector,allocator<Detector> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TFragmentFromNTupleDictionary_243_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Detector,allocator<Detector> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TFragmentFromNTupleDictionary_243_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<Detector,allocator<Detector> >::size_type' 0 - sz u 'Detector' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TFragmentFromNTupleDictionary_243_0_11, 107, -1, G__defined_typename("vector<Detector,allocator<Detector> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TFragmentFromNTupleDictionary_243_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TFragmentFromNTupleDictionary_243_0_13, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector), G__defined_typename("vector<Detector,allocator<Detector> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TFragmentFromNTupleDictionary_243_0_14, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector), G__defined_typename("vector<Detector,allocator<Detector> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Detector,allocator<Detector> >",3592,G__TFragmentFromNTupleDictionary_243_0_15, 105, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Detector,allocator<Detector> >",3592,G__TFragmentFromNTupleDictionary_243_0_16, 105, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n u 'Detector' - 11 'Detector()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Detector,allocator<Detector> >",3592,G__TFragmentFromNTupleDictionary_243_0_17, 105, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<Detector,allocator<Detector> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Detector,allocator<Detector> >",3592,G__TFragmentFromNTupleDictionary_243_0_18, 105, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<Detector,allocator<Detector> >::iterator' 'vector<Detector,allocator<Detector> >::const_iterator' 10 - first u 'vector<Detector,allocator<Detector> >::iterator' 'vector<Detector,allocator<Detector> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TFragmentFromNTupleDictionary_243_0_19, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<Detector,allocator<Detector> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TFragmentFromNTupleDictionary_243_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TFragmentFromNTupleDictionary_243_0_21, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TFragmentFromNTupleDictionary_243_0_22, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_Detector), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TFragmentFromNTupleDictionary_243_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Detector' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TFragmentFromNTupleDictionary_243_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Detector,allocator<Detector> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TFragmentFromNTupleDictionary_243_0_25, 117, G__get_linked_tagnum(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<Detector,allocator<Detector> >::iterator' - 0 - position u 'Detector' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TFragmentFromNTupleDictionary_243_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Detector,allocator<Detector> >::iterator' - 0 - position u 'vector<Detector,allocator<Detector> >::iterator' 'vector<Detector,allocator<Detector> >::const_iterator' 10 - first "
"u 'vector<Detector,allocator<Detector> >::iterator' 'vector<Detector,allocator<Detector> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TFragmentFromNTupleDictionary_243_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Detector,allocator<Detector> >::iterator' - 0 - position k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n "
"u 'Detector' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TFragmentFromNTupleDictionary_243_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TFragmentFromNTupleDictionary_243_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Detector,allocator<Detector> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TFragmentFromNTupleDictionary_243_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<Detector,allocator<Detector> >::iterator' - 0 - first u 'vector<Detector,allocator<Detector> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TFragmentFromNTupleDictionary_243_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<Detector,allocator<Detector> >", 3718, G__TFragmentFromNTupleDictionary_243_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTFragmentFromNTupleDictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTFragmentFromNTupleDictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTFragmentFromNTupleDictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_Detector = { "Detector" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_TFragment = { "TFragment" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR = { "vector<Detector,allocator<Detector> >" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator = { "vector<Detector,allocator<Detector> >::iterator" , 99 , -1 };
G__linked_taginfo G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Detector,allocator<Detector> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTFragmentFromNTupleDictionary() {
  G__TFragmentFromNTupleDictionaryLN_TClass.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TBuffer.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMemberInspector.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TObject.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TVector3.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_Detector.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_TFragment.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator.tagnum = -1 ;
  G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTFragmentFromNTupleDictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TClass);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TObject);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_Detector),sizeof(Detector),-1,324864,(char*)NULL,G__setup_memvarDetector,G__setup_memfuncDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_TFragment),sizeof(TFragment),-1,29952,"TFragment structure",G__setup_memvarTFragment,G__setup_memfuncTFragment);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR),sizeof(vector<Detector,allocator<Detector> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEDetectorcOallocatorlEDetectorgRsPgR,G__setup_memfuncvectorlEDetectorcOallocatorlEDetectorgRsPgR);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TFragmentFromNTupleDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupTFragmentFromNTupleDictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupTFragmentFromNTupleDictionary()");
  G__set_cpp_environmentTFragmentFromNTupleDictionary();
  G__cpp_setup_tagtableTFragmentFromNTupleDictionary();

  G__cpp_setup_inheritanceTFragmentFromNTupleDictionary();

  G__cpp_setup_typetableTFragmentFromNTupleDictionary();

  G__cpp_setup_memvarTFragmentFromNTupleDictionary();

  G__cpp_setup_memfuncTFragmentFromNTupleDictionary();
  G__cpp_setup_globalTFragmentFromNTupleDictionary();
  G__cpp_setup_funcTFragmentFromNTupleDictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTFragmentFromNTupleDictionary();
  return;
}
class G__cpp_setup_initTFragmentFromNTupleDictionary {
  public:
    G__cpp_setup_initTFragmentFromNTupleDictionary() { G__add_setup_func("TFragmentFromNTupleDictionary",(G__incsetup)(&G__cpp_setupTFragmentFromNTupleDictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTFragmentFromNTupleDictionary() { G__remove_setup_func("TFragmentFromNTupleDictionary"); }
};
G__cpp_setup_initTFragmentFromNTupleDictionary G__cpp_setup_initializerTFragmentFromNTupleDictionary;

